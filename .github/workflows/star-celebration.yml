name: Stargazer Celebration

on:
  watch:
    types: [started]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  celebrate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract event data (pure Python)
        id: evt
        run: |
          python3 - <<'PY'
          import json, os, urllib.request, sys

          event_path = os.environ.get("GITHUB_EVENT_PATH")
          actor = os.environ.get("GITHUB_ACTOR", "someone")
          repo  = os.environ.get("GITHUB_REPOSITORY")

          login = actor  # fallback default
          try:
            with open(event_path, "r", encoding="utf-8") as f:
              data = json.load(f)
            # for 'watch' events
            login = (data.get("sender", {}) or {}).get("login") or actor
          except Exception:
            pass

          # get current star count from API
          try:
            with urllib.request.urlopen(f"https://api.github.com/repos/{repo}") as resp:
              repo_info = json.load(resp)
              stars = int(repo_info.get("stargazers_count", 0))
          except Exception:
            stars = 0

          # write outputs
          with open(os.environ["GITHUB_OUTPUT"], "a", encoding="utf-8") as out:
            out.write(f"login={login}\n")
            out.write(f"stars={stars}\n")
          PY

      - name: Update README (badge wall)
        env:
          LOGIN: ${{ steps.evt.outputs.login }}
          STARS: ${{ steps.evt.outputs.stars }}
        run: |
          python3 - <<'PY'
          import os, re, pathlib, random, html

          login = os.environ["LOGIN"] or "someone"
          # build a colorful badge for the stargazer
          colors = ["181717","0E75B6","2E7D32","6A1B9A","1565C0","D81B60","F57C00","455A64"]
          color = random.choice(colors)
          badge = (
            f'<a href="https://github.com/{html.escape(login)}" title="@{html.escape(login)}">'
            f'<img src="https://img.shields.io/badge/@{html.escape(login)}-{color}?style=for-the-badge&logo=github&logoColor=white" /></a>'
          )

          readme = pathlib.Path("README.md").read_text(encoding="utf-8")

          start = "<!-- STARS-WALL:START -->"
          end = "<!-- STARS-WALL:END -->"
          pattern = re.compile(re.escape(start) + r"(.*?)" + re.escape(end), re.S)

          def insert(m):
            body = m.group(1).strip()
            existing = re.findall(r'<a href="https://github\.com/[^"]+">.*?</a>', body)
            # remove duplicate of same user, then prepend new one
            wall = " ".join([badge] + existing)[:5000]
            return f"{start}\n{wall}\n{end}"

          updated = pattern.sub(insert, readme)
          pathlib.Path("README.md").write_text(updated, encoding="utf-8")
          PY

      - name: Commit & push
        run: |
          set -e
          git status
          if ! git diff --quiet; then
            git config user.name  "star-bot"
            git config user.email "star-bot@users.noreply.github.com"
            git add README.md
            git commit -m "Update stargazer wall"
            git push
          else
            echo "No changes to commit."
          fi
