name: Stargazer Celebration

on:
  watch:
    types: [started]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  celebrate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract event data
        id: evt
        run: |
          LOGIN=$(jq -r '.sender.login' $GITHUB_EVENT_PATH)
          if [ "$LOGIN" = "null" ] || [ -z "$LOGIN" ]; then
            LOGIN="${GITHUB_ACTOR}"
          fi
          echo "login=$LOGIN" >> $GITHUB_OUTPUT
          echo "stars=$(curl -s https://api.github.com/repos/${GITHUB_REPOSITORY} | jq -r .stargazers_count)" >> $GITHUB_OUTPUT

      - name: Update README (badge wall)
        env:
          LOGIN: ${{ steps.evt.outputs.login }}
          STARS: ${{ steps.evt.outputs.stars }}
        run: |
          python3 - <<'PY'
          import os, re, pathlib, random, html

          login = os.environ["LOGIN"]
          stars = int(os.environ["STARS"])

          # Badge "pill" for the user who starred
          colors = ["181717","0E75B6","2E7D32","6A1B9A","1565C0","D81B60","F57C00","455A64"]
          color = random.choice(colors)
          badge = (
            f'<a href="https://github.com/{html.escape(login)}" title="@{html.escape(login)}">'
            f'<img src="https://img.shields.io/badge/@{html.escape(login)}-{color}?style=for-the-badge&logo=github&logoColor=white" /></a>'
          )

          readme = pathlib.Path("README.md").read_text(encoding="utf-8")

          start = "<!-- STARS-WALL:START -->"
          end = "<!-- STARS-WALL:END -->"
          pattern = re.compile(re.escape(start) + r"(.*?)" + re.escape(end), re.S)

          def insert(m):
            body = m.group(1).strip()
            # mevcut badge'leri oku (satır veya boşluk fark etmez)
            existing = [x for x in re.findall(r'<a href="https://github\.com/[^"]+">.*?</a>', body)]
            # yeni geleni en başa ekle, tekrar varsa kaldırıp öne al
            existing = [b for b in existing if f'href="https://github.com/{login}"' not in b]
            wall = " ".join([badge] + existing[:59])  # en fazla 60 badge tut
            return f"{start}\n{wall}\n{end}"

          updated = pattern.sub(insert, readme)
          pathlib.Path("README.md").write_text(updated, encoding="utf-8")
          PY

      - name: Commit & push
        run: |
          if ! git diff --quiet; then
            git config user.name  "star-bot"
            git config user.email "star-bot@users.noreply.github.com"
            git add README.md
            git commit -m "Update stargazer wall"
            git push
          else
            echo "No changes to commit."
