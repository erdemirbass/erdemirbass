name: Stargazer Celebration

on:
  watch:
    types: [started]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  celebrate:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Extract event data
        id: evt
        run: |
          LOGIN=$(jq -r '.sender.login' $GITHUB_EVENT_PATH)
          if [ "$LOGIN" = "null" ] || [ -z "$LOGIN" ]; then
            LOGIN="${GITHUB_ACTOR}"
          fi
          echo "login=$LOGIN" >> $GITHUB_OUTPUT
          
          echo "stars=$(curl -s https://api.github.com/repos/${GITHUB_REPOSITORY} | jq -r .stargazers_count)" >> $GITHUB_OUTPUT

      - name: Update README
        env:
          LOGIN: ${{ steps.evt.outputs.login }}
          STARS: ${{ steps.evt.outputs.stars }}
        run: |
          python3 - <<'PY'
          import os, re, datetime, pathlib, random

          login = os.environ["LOGIN"]
          stars = int(os.environ["STARS"])
          now = datetime.datetime.utcnow().strftime("%Y-%m-%d %H:%M UTC")

          milestones = {10,25,50,75,100,150,200,300,400,500,750,1000}
          emoji_pool = ["üöÄ","üéâ","‚ú®","üòé","üß†","‚öôÔ∏è","üî•","ü•≥","üí´","üåü","üß©","üèÜ"]
          rnd = random.choice(emoji_pool)

          if stars in milestones or (stars % 100 == 0 and stars > 0):
            line = f"- **{stars}‚≠ê milestone!** {rnd} Thanks **@{login}**!  \n  _Updated: {now}_"
          else:
            line = f"- **{stars}‚≠ê** ‚Äî thanks **@{login}**! {rnd}  \n  _Updated: {now}_"

          readme_path = pathlib.Path("README.md")
          content = readme_path.read_text(encoding="utf-8")

          start = "<!-- STARS-LOG:START -->"
          end = "<!-- STARS-LOG:END -->"
          pattern = re.compile(re.escape(start) + "(.*?)" + re.escape(end), re.S)

          def replace(match):
            body = match.group(1).strip()
            if "No stars yet" in body:
              body = ""
            lines = body.splitlines()
            lines.insert(0, line)
            return f"{start}\n" + "\n".join(lines[:200]) + f"\n{end}"

          new_content = pattern.sub(replace, content)
          readme_path.write_text(new_content, encoding="utf-8")
          PY

      - name: Commit & push
        run: |
          if ! git diff --quiet; then
            git config user.name  "star-bot"
            git config user.email "star-bot@users.noreply.github.com"
            git add README.md
            git commit -m "Celebrate new star"
            git push
          else:
            echo "No changes to commit."
