name: Stargazer Wall

on:
  watch:
    types: [started]
  workflow_dispatch:

permissions:
  contents: write

jobs:
  update-wall:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Debug & Pre-check README
        run: |
          echo "[dbg] Actor: $GITHUB_ACTOR"
          echo "[dbg] Repo: $GITHUB_REPOSITORY"
          grep -q "<!-- STARS-WALL:START -->" README.md && echo "[dbg] Start marker ✅" || (echo "::error::Start marker missing ❌"; exit 1)
          grep -q "<!-- STARS-WALL:END -->" README.md && echo "[dbg] End marker ✅" || (echo "::error::End marker missing ❌"; exit 1)

      - name: Fetch stargazers & Update Wall
        env:
          REPO: ${{ github.repository }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          python3 - <<'PY'
          import os, urllib.request, json, pathlib, re, html, random, sys

          repo = os.environ["REPO"]

          print("[dbg] Fetching stargazers list...")
          req = urllib.request.Request(
              f"https://api.github.com/repos/{repo}/stargazers",
              headers={
                  "Accept": "application/vnd.github.v3+json",
                  "Authorization": f"Bearer {os.environ['GITHUB_TOKEN']}",
                  "User-Agent": "star-wall-bot"
              }
          )
          try:
            with urllib.request.urlopen(req) as resp:
              data = json.load(resp)
              print(f"[dbg] Found {len(data)} stargazers ⭐")
          except Exception as e:
            print(f"::error::API fetch failed: {e}")
            sys.exit(1)

          colors = ["181717","0E75B6","2E7D32","6A1B9A","1565C0","D81B60","F57C00","455A64"]
          badges = []
          for user in data:
            login = user.get("login","unknown")
            color = random.choice(colors)
            badges.append(
              f'<a href="https://github.com/{html.escape(login)}" title="@{html.escape(login)}">'
              f'<img src="https://img.shields.io/badge/@{html.escape(login)}-{color}?style=for-the-badge&logo=github&logoColor=white" /></a>'
            )

          wall_html = " ".join(badges[:120])  # First 120 users safe

          readme_path = pathlib.Path("README.md")
          content = readme_path.read_text(encoding="utf-8")

          start = "<!-- STARS-WALL:START -->"
          end = "<!-- STARS-WALL:END -->"
          pattern = re.compile(re.escape(start) + r"(.*?)" + re.escape(end), re.S)

          def repl(m):
            return f"{start}\n{wall_html}\n{end}"

          updated = pattern.sub(repl, content)

          if updated == content:
            print("::warning::README unchanged (no update)")
          else:
            readme_path.write_text(updated, encoding="utf-8")
            print("[dbg] README updated ✅")

          PY

      - name: Commit & Push Changes
        shell: bash
        run: |
          set -e
          git status
          if ! git diff --quiet; then
            git config user.name "star-bot"
            git config user.email "star-bot@users.noreply.github.com"
            git add README.md
            git commit -m "⭐ Update Stargazer Wall"
            git push
          else
            echo "[dbg] No changes to commit"
          fi

